version: "3.8"

services:
  # Character AI Application
  character-ai:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: character-ai-app
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - CAI_ENVIRONMENT=production
      - CAI_PATHS__MODELS_DIR=/app/models
      - CAI_MODELS__LLAMA_BACKEND=llama_cpp
      - CAI_TTS__PROCESSOR=coqui
      - CAI_TTS__VOICE_CLONING=true
      - CAI_INTERACTION__STT_LANGUAGE=en
      - PYTHONUNBUFFERED=1
    volumes:
      - ./models:/app/models:ro
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - character-ai-network
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: character-ai-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    networks:
      - character-ai-network

  # Grafana Dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: character-ai-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - character-ai-network
    depends_on:
      - prometheus

volumes:
  prometheus_data:
  grafana_data:

networks:
  character-ai-network:
    driver: bridge
